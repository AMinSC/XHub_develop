name: Update Lightsail
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:12
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.4
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Make migrations for player and quickmatch
        run: |
          python manage.py makemigrations player
          python manage.py makemigrations quickmatch
      
      - name: Apply database migrations
        run: python manage.py migrate
      
      - name: Run tests
        run: python manage.py test player
  

  
  update-lighthouse:
    needs: test  # Ensuring deployment only happens after tests succeed
    runs-on: ubuntu-latest
    steps:
    - name: Add user to docker group
      run: sudo usermod -aG docker $USER && sudo service docker restart
        
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.6.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: SSH and Update
      run: |
        ssh-keyscan 54.248.217.183 >> ~/.ssh/known_hosts
        ssh -v ubuntu@54.248.217.183 <<EOF
          cd /home/ubuntu/XHub
          git checkout main
          git pull origin main
          ./docker-initial.sh
        EOF
