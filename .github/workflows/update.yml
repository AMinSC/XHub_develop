name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15.4-alpine3.18
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.4
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check for migration issues
      env:
        DB_HOST: localhost  # Connect to the service container
        DB_PORT: 5432
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
      run: |
        python manage.py check
    
    - name: Apply database migrations
      env:
        DB_HOST: localhost  # Connect to the service container
        DB_PORT: 5432
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
      run: |
        python manage.py migrate
    
    - name: Run tests
      env:
        DB_HOST: localhost  # Connect to the service container
        DB_PORT: 5432
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
      run: |
        python manage.py test player
