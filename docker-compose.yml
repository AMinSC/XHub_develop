version: '3'  # Docker Compose version

services:  # Define services list
  django:  # Define Django application service
    build:  # Specify image build information
      context: .  # Use the current directory as the build context
      dockerfile: Dockerfile  # Specify the Dockerfile to use
    ports:
      - "8000:8000"  # Connect the host's port 8000 to the container's port 8000
    environment:  # Set environment variables
      DJANGO_SETTINGS_MODULE: core.settings
      DB_NAME: xhubdb
      DB_USER: postgres
      DB_PASSWORD: kid14128
      DB_HOST: db
      DB_PORT: 5432
    depends_on:
      - db  # Start the django service after the db service starts
    volumes:
      # Mount the current directory to the container's /app directory
      - .:/app  
      # Set the static file path of this Django
      - ./staticfiles:/staticfiles 
    hostname: django

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: xhubdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: kid14128
    volumes:
      - pgdata:/var/lib/postgresql/data

  nginx:
    image: nginx:1.25.2 # Use the latest version of the nginx image
    ports:
      - "80:80" # Map the host's port 80 to the container's port 80
    volumes:
      # Mount the host's ./nginx/nginx.conf file to the container's /etc/nginx/nginx.conf location as read-only
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # Set the static file path of this nginx
      - ./staticfiles:/staticfiles
    depends_on:
      - django # Start the nginx service after the django service starts

volumes:  # Define volumes
  pgdata:  # Create the pgdata volume
